{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slimm\\\\Desktop\\\\Coding\\\\Projects\\\\Node_Nimita_Classes\\\\TSReactBlogV2.0\\\\tsblog_client\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useCallback, useEffect, useState } from \"react\";\nimport { baseUrl, postRequest } from \"../utils/services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [subscriber, setSubscriber] = useState(null);\n  const [registerError, setRegisterError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loginError, setLoginError] = useState(null);\n  const [isLoginLoading, setIsLoginLoading] = useState(false);\n  const [registerInfo, setRegisterInfo] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    const subscriber = localStorage.getItem(\"Subscriber\");\n    setSubscriber(JSON.parse(subscriber));\n  }, []);\n  const updateRegisterInfo = useCallback(info => {\n    setRegisterInfo(info);\n  }, []);\n  const updateLoginInfo = useCallback(info => {\n    setLoginInfo(info);\n  }, []);\n  const registerSubscriber = useCallback(async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setRegisterError(null);\n    const response = await postRequest(`${baseUrl}/subscribers/register`, JSON.stringify(registerInfo));\n    setIsLoading(false);\n    if (response.error) {\n      return setRegisterError(response);\n    }\n    localStorage.setItem(\"Subscriber\", JSON.stringify(response));\n    setSubscriber(response);\n  }, [registerInfo]);\n  const loginSubscriber = useCallback(async e => {\n    e.preventDefault();\n    setIsLoginLoading(true);\n    setLoginError(null);\n    const response = await postRequest(`${baseUrl}/subscribers/login`, JSON.stringify(loginInfo));\n    setIsLoginLoading(false);\n    if (response.error) {\n      return setLoginError(response);\n    }\n    localStorage.setItem(\"Subscriber\", JSON.stringify(response));\n    setSubscriber(response);\n  }, [loginInfo]);\n  const logoutSubscriber = useCallback(() => {\n    localStorage.removeItem(\"Subscriber\");\n    setSubscriber(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      subscriber,\n      registerInfo,\n      updateRegisterInfo,\n      registerSubscriber,\n      registerError,\n      isLoading,\n      logoutSubscriber,\n      loginSubscriber,\n      updateLoginInfo,\n      loginInfo,\n      loginError,\n      isLoginLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"JFXz0r1OfJ/FUSp8+Y84eg/05bE=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useCallback","useEffect","useState","baseUrl","postRequest","jsxDEV","_jsxDEV","AuthContext","undefined","AuthContextProvider","children","_s","subscriber","setSubscriber","registerError","setRegisterError","isLoading","setIsLoading","loginError","setLoginError","isLoginLoading","setIsLoginLoading","registerInfo","setRegisterInfo","name","email","password","loginInfo","setLoginInfo","localStorage","getItem","JSON","parse","updateRegisterInfo","info","updateLoginInfo","registerSubscriber","e","preventDefault","response","stringify","error","setItem","loginSubscriber","logoutSubscriber","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/slimm/Desktop/Coding/Projects/Node_Nimita_Classes/TSReactBlogV2.0/tsblog_client/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useCallback, useEffect, useState } from \"react\";\r\nimport { baseUrl, postRequest } from \"../utils/services\";\r\n\r\nexport const AuthContext = createContext(undefined);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n\r\n    const [subscriber, setSubscriber] = useState<null|'string'>(null);\r\n    const [registerError, setRegisterError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [loginError, setLoginError] = useState(null);\r\n    const [isLoginLoading, setIsLoginLoading] = useState(false);\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        name: \"\",\r\n        email: \"\",  \r\n        password: \"\",\r\n    });\r\n    const [loginInfo, setLoginInfo] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n    })\r\n\r\n    useEffect(() => {\r\n        const subscriber = localStorage.getItem(\"Subscriber\");\r\n        setSubscriber(JSON.parse<null|'string'>(subscriber))\r\n    }, [])\r\n\r\n    const updateRegisterInfo = useCallback((info: any) => {\r\n        setRegisterInfo(info);\r\n    }, []);\r\n\r\n    const updateLoginInfo = useCallback((info: any) => {\r\n        setLoginInfo(info);\r\n    }, []);\r\n\r\n    const registerSubscriber = useCallback(async (e: any) => {\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setRegisterError(null);\r\n        const response = await postRequest(`${baseUrl}/subscribers/register`, JSON.stringify(registerInfo));\r\n\r\n        setIsLoading(false);\r\n        if (response.error) {\r\n            return setRegisterError(response);\r\n        }\r\n        localStorage.setItem(\"Subscriber\", JSON.stringify(response));\r\n        setSubscriber(response);\r\n    }, [registerInfo]);\r\n\r\n    const loginSubscriber = useCallback(async (e: any) => {\r\n        e.preventDefault();\r\n        setIsLoginLoading(true);\r\n        setLoginError(null);\r\n\r\n        const response = await postRequest(`${baseUrl}/subscribers/login`, JSON.stringify(loginInfo));\r\n        setIsLoginLoading(false);\r\n        if (response.error) {\r\n            return setLoginError(response);\r\n        }\r\n\r\n        localStorage.setItem(\"Subscriber\", JSON.stringify(response));\r\n        setSubscriber(response);\r\n    }, [loginInfo])\r\n\r\n    const logoutSubscriber = useCallback(() => {\r\n        localStorage.removeItem(\"Subscriber\");\r\n        setSubscriber(null);\r\n    }, [])\r\n\r\n    return <AuthContext.Provider\r\n        value={{\r\n            subscriber,\r\n            registerInfo,\r\n            updateRegisterInfo,\r\n            registerSubscriber,\r\n            registerError,\r\n            isLoading,\r\n            \r\n            logoutSubscriber,\r\n\r\n            loginSubscriber,\r\n            updateLoginInfo,\r\n            loginInfo,\r\n            loginError,\r\n            isLoginLoading,\r\n        }}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}