{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slimm\\\\Desktop\\\\Coding\\\\Projects\\\\Node_Nimita_Classes\\\\TSReactBlogV2.0\\\\tsblog_client\\\\src\\\\components\\\\SubcategoryPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SubcategoryPage() {\n  _s();\n  const {\n    categoryName,\n    subCategoryName\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [category, setCategory] = useState(null);\n  const [subCategory, setSubCategory] = useState(null);\n  const getCategory = async () => {\n    try {\n      const res = await axios.get(`/api/categories/${categoryName}`);\n      console.log(res.data);\n      setCategory(res.data);\n      const findSubCategory = res.data.subCategories.find(subCat => subCat.name == subCategoryName);\n      setSubCategory(findSubCategory);\n    } catch (error) {\n      navigate(\"/\");\n    }\n  };\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const response = await axios.get(`/api/posts/${categoryName}/${subCategoryName}`);\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    }\n    fetchPosts();\n  }, [categoryName, subCategoryName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Posts in \", subCategoryName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(SubcategoryPage, \"Ud4/T3l7d0BC+71jscBNeQvHzSY=\", false, function () {\n  return [useParams];\n});\n_c = SubcategoryPage;\nexport default SubcategoryPage;\nvar _c;\n$RefreshReg$(_c, \"SubcategoryPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","SubcategoryPage","_s","categoryName","subCategoryName","posts","setPosts","category","setCategory","subCategory","setSubCategory","getCategory","res","get","console","log","data","findSubCategory","subCategories","find","subCat","name","error","navigate","fetchPosts","response","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","_id","_c","$RefreshReg$"],"sources":["C:/Users/slimm/Desktop/Coding/Projects/Node_Nimita_Classes/TSReactBlogV2.0/tsblog_client/src/components/SubcategoryPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction SubcategoryPage() {\r\n  const { categoryName, subCategoryName } = useParams<{ categoryName: string; subCategoryName: string }>();\r\n  const [posts, setPosts] = useState<{ _id: string; title: string }[]>([]);\r\n  const [category, setCategory] = useState<any>(null)\r\n  const [subCategory, setSubCategory] = useState<any>(null)\r\n\r\n  const getCategory = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/categories/${categoryName}`);\r\n      console.log(res.data);\r\n      setCategory(res.data);\r\n      const findSubCategory = res.data.subCategories.find((subCat:any)=>subCat.name==subCategoryName)\r\n      setSubCategory(findSubCategory);\r\n    } catch (error) {\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchPosts() {\r\n      try {\r\n        const response = await axios.get(`/api/posts/${categoryName}/${subCategoryName}`);\r\n        setPosts(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    }\r\n\r\n    fetchPosts();\r\n  }, [categoryName, subCategoryName]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Posts in {subCategoryName}</h2>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post._id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubcategoryPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGP,SAAS,CAAoD,CAAC;EACxG,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAmC,EAAE,CAAC;EACxE,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAM,IAAI,CAAC;EACnD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAM,IAAI,CAAC;EAEzD,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,mBAAkBV,YAAa,EAAC,CAAC;MAC9DW,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MACrBR,WAAW,CAACI,GAAG,CAACI,IAAI,CAAC;MACrB,MAAMC,eAAe,GAAGL,GAAG,CAACI,IAAI,CAACE,aAAa,CAACC,IAAI,CAAEC,MAAU,IAAGA,MAAM,CAACC,IAAI,IAAEjB,eAAe,CAAC;MAC/FM,cAAc,CAACO,eAAe,CAAC;IACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,eAAe6B,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAACe,GAAG,CAAE,cAAaV,YAAa,IAAGC,eAAgB,EAAC,CAAC;QACjFE,QAAQ,CAACmB,QAAQ,CAACT,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;IAEAE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACrB,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnC,oBACEJ,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,GAAI,WAAS,EAACtB,eAAe;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnC9B,OAAA;MAAA0B,QAAA,EACGrB,KAAK,CAAC0B,GAAG,CAAEC,IAAI,iBACdhC,OAAA;QAAA0B,QAAA,EAAoBM,IAAI,CAACC;MAAK,GAArBD,IAAI,CAACE,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAC5B,EAAA,CAzCQD,eAAe;EAAA,QACoBJ,SAAS;AAAA;AAAAsC,EAAA,GAD5ClC,eAAe;AA2CxB,eAAeA,eAAe;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}